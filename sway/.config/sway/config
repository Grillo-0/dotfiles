set $mod Mod1

set $left h
set $down j
set $up k
set $right l

set $term alacritty

set $menu wofi --show drun -b -I -m -G

set $bg     #282828
set $fg     #ebdbb2
set $red    #cc241d
set $green  #98971a
set $yellow #d79921
set $blue   #458588
set $purple #b16286
set $aqua   #689d68
set $orange #d65d0e
set $gray   #928374

output * bg $(find ~/Pictures/wallpapers/ -type f | shuf -n1) fill

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen
exec swayidle -w \
	timeout 300 'swaylock -f -c 000000' \
	timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
	before-sleep 'swaylock -f -c 000000'

exec nm-applet --indicator
exec blueman-applet

input "type:keyboard" {
	xkb_layout br
	xkb_options ctrl:nocaps
}

input "type:touchpad" {
	dwt disabled
	dwtp disabled
	tap enabled
	natural_scroll disabled
	middle_emulation enabled
	click_method clickfinger
}

bindsym $mod+t exec $term

bindsym $mod+Shift+q kill

bindsym $mod+d exec $menu

bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
bindsym Shift+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
bindsym Shift+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && ( [ "$(pactl get-sink-mute @DEFAULT_SINK@)" = "Mute: yes" ] && echo 0 > $WOBSOCK ) || pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s +1% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym Shift+XF86MonBrightnessUp exec --no-startup-id brightnessctl s +10% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s 1%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym Shift+XF86MonBrightnessDown exec --no-startup-id brightnessctl s 10%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

# Grab a screenshot from the focused window under Sway, using swaymsg and jq:
bindsym $mod+Shift+w exec --no-startup-id swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"'grim -g "$()" - | wl-copy
bindsym $mod+Shift+p exec --no-startup-id grim -g "$(slurp)" - | wl-copy
bindsym $mod+p exec --no-startup-id grim - | wl-copy

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

bindsym $mod+Shift+c reload

bindsym $mod+m exec --no-startup-id swaylock -f -c 000000

bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+Ctrl+$left move workspace output left
bindsym $mod+Ctrl+$down move workspace output down
bindsym $mod+Ctrl+$up move workspace output up
bindsym $mod+Ctrl+$right move workspace output right

bindsym $mod+Ctrl+Left move workspace output left
bindsym $mod+Ctrl+Down move workspace output down
bindsym $mod+Ctrl+Up move workspace output up
bindsym $mod+Ctrl+Right move workspace output right

bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+Tab workspace back_and_forth

bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

bindsym $mod+b splith
bindsym $mod+v splitv

bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

bindsym $mod+f fullscreen

bindsym $mod+Shift+space floating toggle

bindsym $mod+Shift+s sticky toggle

bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

bindsym $mod+Shift+dead_tilde move scratchpad

bindsym $mod+dead_tilde scratchpad show

mode "resize" {
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

default_border normal 2
smart_borders on

font "Iosevka Bold 9"

client.focused          $green $green $bg $aqua $green
client.focused_inactive $green $bg    $fg $aqua $bg
client.unfocused        $bg    $bg    $fg $aqua $bg
client.urgent           $red   $red   $bg $aqua $bg

bar {
	swaybar_command waybar

	position bottom
	font "Iosevka Bold 9"
	separator_symbol "|"

	colors {
		background $bg
		statusline $fg

		focused_workspace  $green $green $bg
		inactive_workspace $bg    $bg    $fg
		active_workspace   $green $bg    $fg
		urgent_workspace   $red   $red   $bg
	}

}

include /etc/sway/config.d/*
